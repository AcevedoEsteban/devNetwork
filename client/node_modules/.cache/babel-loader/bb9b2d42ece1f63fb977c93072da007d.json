{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from './types'; // get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/JSON'\n      }\n    };\n    const res = await axios.post('api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const {\n      errors\n    } = err.response.data;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // add experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/JSON'\n      }\n    };\n    const res = await axios.put('api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('experience added ', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const {\n      errors\n    } = err.response.data;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // add education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/JSON'\n      }\n    };\n    const res = await axios.put('api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('education added ', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const {\n      errors\n    } = err.response.data;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // delete experience\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/udmeyCourse/node/devNetwork/client/src/action/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteEducation","id","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE } from './types';\r\n\r\n// get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/JSON',\r\n      },\r\n    };\r\n\r\n    const res = await axios.post('api/profile', formData, config);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    const { errors } = err.response.data;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// add experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/JSON',\r\n      },\r\n    };\r\n\r\n    const res = await axios.put('api/profile/experience', formData, config);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('experience added ', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const { errors } = err.response.data;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// add education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/JSON',\r\n      },\r\n    };\r\n\r\n    const res = await axios.put('api/profile/education', formData, config);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('education added ', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const { errors } = err.response.data;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// delete experience\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('education Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}