{"ast":null,"code":"import _toConsumableArray from\"C:\\\\udmeyCourse\\\\node\\\\devNetwork\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\udmeyCourse\\\\node\\\\devNetwork\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{GET_POSTS,POST_ERROR,UPDATE_LIKES,DELETE_POSTS,ADD_POST,GET_POST,ADD_COMMENT,REMOVE_COMMENT}from'../action/types';var initialState={posts:[],post:null,loading:true,error:{}};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case GET_POSTS:return _objectSpread(_objectSpread({},state),{},{posts:payload,loading:false});case GET_POST:return _objectSpread(_objectSpread({},state),{},{post:payload,loading:false});case ADD_POST:return _objectSpread(_objectSpread({},state),{},{posts:[payload].concat(_toConsumableArray(state.posts)),loading:false});case DELETE_POSTS:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.filter(function(post){return post._id!==payload;}),loading:false});case UPDATE_LIKES:return _objectSpread(_objectSpread({},state.error),{},{posts:state.posts.map(function(post){return post._id===payload.id?_objectSpread(_objectSpread({},post),{},{likes:payload.likes}):post;}),loading:false});case ADD_COMMENT:return _objectSpread(_objectSpread(_objectSpread({},state),{},{post:payload},state.post),{},{loading:false});case REMOVE_COMMENT:return _objectSpread(_objectSpread({},state),{},{post:_objectSpread(_objectSpread({},state.post),{},{comments:state.post.comments.filter(// to bring in all the comments except the one with this id cuz we delteing it\nfunction(comment){return comment._id!==payload;})}),loading:false});case POST_ERROR:return _objectSpread(_objectSpread({},state),{},{error:payload,loading:false});default:return state;}}","map":{"version":3,"sources":["C:/udmeyCourse/node/devNetwork/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POSTS","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","id","likes","comments","comment"],"mappings":"iVAAA,OACEA,SADF,CAEEC,UAFF,CAGEC,YAHF,CAIEC,YAJF,CAKEC,QALF,CAMEC,QANF,CAOEC,WAPF,CAQEC,cARF,KASO,iBATP,CAWA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,EADY,CAEnBC,IAAI,CAAE,IAFa,CAGnBC,OAAO,CAAE,IAHU,CAInBC,KAAK,CAAE,EAJY,CAArB,CAOA,cAAe,WAAwC,IAA9BC,CAAAA,KAA8B,2DAAtBL,YAAsB,IAARM,CAAAA,MAAQ,8CAC7CC,CAAAA,IAD6C,CAC3BD,MAD2B,CAC7CC,IAD6C,CACvCC,OADuC,CAC3BF,MAD2B,CACvCE,OADuC,CAErD,OAAQD,IAAR,EACE,IAAKf,CAAAA,SAAL,CACE,sCACKa,KADL,MAEEJ,KAAK,CAAEO,OAFT,CAGEL,OAAO,CAAE,KAHX,GAKF,IAAKN,CAAAA,QAAL,CACE,sCACKQ,KADL,MAEEH,IAAI,CAAEM,OAFR,CAGEL,OAAO,CAAE,KAHX,GAKF,IAAKP,CAAAA,QAAL,CACE,sCACKS,KADL,MAEEJ,KAAK,EAAGO,OAAH,4BAAeH,KAAK,CAACJ,KAArB,EAFP,CAGEE,OAAO,CAAE,KAHX,GAKF,IAAKR,CAAAA,YAAL,CACE,sCACKU,KADL,MAEEJ,KAAK,CAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmB,SAACP,IAAD,QAAUA,CAAAA,IAAI,CAACQ,GAAL,GAAaF,OAAvB,EAAnB,CAFT,CAGEL,OAAO,CAAE,KAHX,GAMF,IAAKT,CAAAA,YAAL,CACE,sCACKW,KAAK,CAACD,KADX,MAEEH,KAAK,CAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAgB,SAACT,IAAD,QACrBA,CAAAA,IAAI,CAACQ,GAAL,GAAaF,OAAO,CAACI,EAArB,gCAA+BV,IAA/B,MAAqCW,KAAK,CAAEL,OAAO,CAACK,KAApD,GAA8DX,IADzC,EAAhB,CAFT,CAKEC,OAAO,CAAE,KALX,GAQF,IAAKL,CAAAA,WAAL,CACE,oDACKO,KADL,MAEEH,IAAI,CAAEM,OAFR,EAGKH,KAAK,CAACH,IAHX,MAIEC,OAAO,CAAE,KAJX,GAMF,IAAKJ,CAAAA,cAAL,CACE,sCACKM,KADL,MAEEH,IAAI,gCACCG,KAAK,CAACH,IADP,MAEFY,QAAQ,CAAET,KAAK,CAACH,IAAN,CAAWY,QAAX,CAAoBL,MAApB,CACR;AACA,SAACM,OAAD,QAAaA,CAAAA,OAAO,CAACL,GAAR,GAAgBF,OAA7B,EAFQ,CAFR,EAFN,CASEL,OAAO,CAAE,KATX,GAWF,IAAKV,CAAAA,UAAL,CACE,sCACKY,KADL,MAEED,KAAK,CAAEI,OAFT,CAGEL,OAAO,CAAE,KAHX,GAKF,QACE,MAAOE,CAAAA,KAAP,CA7DJ,CA+DD","sourcesContent":["import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POSTS,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from '../action/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case DELETE_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        loading: false,\r\n      };\r\n\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state.error,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false,\r\n      };\r\n\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        ...state.post,\r\n        loading: false,\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            // to bring in all the comments except the one with this id cuz we delteing it\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}