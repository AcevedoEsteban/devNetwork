{"ast":null,"code":"import { SET_ALERT, REMOVE_ALERT } from '../action/types';\nimport store from '../store';\nconst initialState = [];\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case 'SET_ALERT':\n      // state never changes but its copy can\n      return [...state, action.payload];\n  }\n}","map":{"version":3,"sources":["C:/udmeyCourse/node/devNetwork/client/src/reducers/alert.js"],"names":["SET_ALERT","REMOVE_ALERT","store","initialState","state","action","type","payload"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,iBAAxC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,UAAUC,KAAK,GAAGD,YAAlB,EAAgCE,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE;AACA,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;AAHJ;AAKD","sourcesContent":["import { SET_ALERT, REMOVE_ALERT } from '../action/types';\r\nimport store from '../store';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_ALERT':\r\n      // state never changes but its copy can\r\n      return [...state, action.payload];\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}